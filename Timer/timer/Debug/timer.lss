
timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000037e  00000412  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000412  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000e8  00000000  00000000  00000441  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00001579  00000000  00000000  00000529  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000077d  00000000  00000000  00001aa2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000005a9  00000000  00000000  0000221f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000002ac  00000000  00000000  000027c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001dd  00000000  00000000  00002a74  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000047a  00000000  00000000  00002c51  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000b8  00000000  00000000  000030cb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  00000362  00000362  000003f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003184  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .rodata       00000010  00800060  00000366  000003fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 14 .text.delay_ms 00000080  0000019c  0000019c  00000230  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  00800070  00000376  0000040a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 16 .text.main    0000004c  00000306  00000306  0000039a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__vector_10 0000004e  0000021c  0000021c  000002b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_4 0000004e  0000026a  0000026a  000002fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_7 0000004e  000002b8  000002b8  0000034c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.Timer_start 000000e8  000000b4  000000b4  00000148  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.Timer1A_CTC_flag 00000010  00000352  00000352  000003e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .bss.g_callBackPtrTimer2CTC 00000002  00800078  00800078  00000412  2**0
                  ALLOC
 23 .bss.g_callBackPtrTimer1COMPA 00000002  0080007a  0080007a  00000412  2**0
                  ALLOC
 24 .bss.g_callBackPtrTimer0CTC 00000002  0080007c  0080007c  00000412  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
   8:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
   c:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  10:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_4>
  14:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  18:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  1c:	0c 94 5c 01 	jmp	0x2b8	; 0x2b8 <__vector_7>
  20:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  24:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  28:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_10>
  2c:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  30:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  34:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  38:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  3c:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  40:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  44:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  48:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  4c:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>
  50:	0c 94 b1 01 	jmp	0x362	; 0x362 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 78       	andi	r16, 0x80	; 128
  58:	00 03       	mulsu	r16, r16
  5a:	66 00       	.word	0x0066	; ????
  5c:	78 00       	.word	0x0078	; ????
  5e:	7e 80       	ldd	r7, Y+6	; 0x06

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d8 e0       	ldi	r29, 0x08	; 8
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	e4 e5       	ldi	r30, 0x54	; 84
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	17 c0       	rjmp	.+46     	; 0xa2 <__do_clear_bss+0x8>
  74:	b5 91       	lpm	r27, Z+
  76:	a5 91       	lpm	r26, Z+
  78:	35 91       	lpm	r19, Z+
  7a:	25 91       	lpm	r18, Z+
  7c:	05 91       	lpm	r16, Z+
  7e:	07 fd       	sbrc	r16, 7
  80:	0c c0       	rjmp	.+24     	; 0x9a <__do_clear_bss>
  82:	95 91       	lpm	r25, Z+
  84:	85 91       	lpm	r24, Z+
  86:	ef 01       	movw	r28, r30
  88:	f9 2f       	mov	r31, r25
  8a:	e8 2f       	mov	r30, r24
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0x20>
  96:	fe 01       	movw	r30, r28
  98:	04 c0       	rjmp	.+8      	; 0xa2 <__do_clear_bss+0x8>

0000009a <__do_clear_bss>:
  9a:	1d 92       	st	X+, r1
  9c:	a2 17       	cp	r26, r18
  9e:	b3 07       	cpc	r27, r19
  a0:	e1 f7       	brne	.-8      	; 0x9a <__do_clear_bss>
  a2:	e0 36       	cpi	r30, 0x60	; 96
  a4:	f4 07       	cpc	r31, r20
  a6:	31 f7       	brne	.-52     	; 0x74 <__do_copy_data+0x8>
  a8:	0e 94 83 01 	call	0x306	; 0x306 <main>
  ac:	0c 94 58 00 	jmp	0xb0	; 0xb0 <_exit>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>

Disassembly of section .text:

00000362 <__bad_interrupt>:
 362:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.delay_ms:

0000019c <delay_ms>:
/* if you want delay more than 250us use delay_ms  */


/* Enter delay in Milliseconds */
void delay_ms(uint16_t delay)
{
 19c:	ef 92       	push	r14
 19e:	ff 92       	push	r15
 1a0:	0f 93       	push	r16
 1a2:	1f 93       	push	r17
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
 1ac:	28 97       	sbiw	r28, 0x08	; 8
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	de bf       	out	0x3e, r29	; 62
 1b4:	0f be       	out	0x3f, r0	; 63
 1b6:	cd bf       	out	0x3d, r28	; 61
 1b8:	7c 01       	movw	r14, r24
	uint16_t counter=  0;
	/* configure timer to count to  100usec  */
	St_Config_Timer_t timer0_config1 = {TIMER1, COMPARE_MODE_toggel , INTERNAL_CLK_PRESCALAR0_1 , DEFAULT_INITIAL_VALUE,100,CHANNEL_A};
 1ba:	88 e0       	ldi	r24, 0x08	; 8
 1bc:	e0 e6       	ldi	r30, 0x60	; 96
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	de 01       	movw	r26, r28
 1c2:	11 96       	adiw	r26, 0x01	; 1
 1c4:	01 90       	ld	r0, Z+
 1c6:	0d 92       	st	X+, r0
 1c8:	8a 95       	dec	r24
 1ca:	e1 f7       	brne	.-8      	; 0x1c4 <delay_ms+0x28>

	Timer_start(&timer0_config1);
 1cc:	ce 01       	movw	r24, r28
 1ce:	01 96       	adiw	r24, 0x01	; 1
 1d0:	0e 94 5a 00 	call	0xb4	; 0xb4 <_etext>


/* Enter delay in Milliseconds */
void delay_ms(uint16_t delay)
{
	uint16_t counter=  0;
 1d4:	00 e0       	ldi	r16, 0x00	; 0
 1d6:	10 e0       	ldi	r17, 0x00	; 0
	St_Config_Timer_t timer0_config1 = {TIMER1, COMPARE_MODE_toggel , INTERNAL_CLK_PRESCALAR0_1 , DEFAULT_INITIAL_VALUE,100,CHANNEL_A};

	Timer_start(&timer0_config1);
	 while(1)
		{
			if(Timer1A_CTC_flag())
 1d8:	0e 94 a9 01 	call	0x352	; 0x352 <Timer1A_CTC_flag>
 1dc:	88 23       	and	r24, r24
 1de:	e1 f3       	breq	.-8      	; 0x1d8 <delay_ms+0x3c>
			{
				 counter++;
 1e0:	0f 5f       	subi	r16, 0xFF	; 255
 1e2:	1f 4f       	sbci	r17, 0xFF	; 255
				if(counter == delay * 10  )
 1e4:	c7 01       	movw	r24, r14
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	97 01       	movw	r18, r14
 1f4:	22 0f       	add	r18, r18
 1f6:	33 1f       	adc	r19, r19
 1f8:	82 0f       	add	r24, r18
 1fa:	93 1f       	adc	r25, r19
 1fc:	08 17       	cp	r16, r24
 1fe:	19 07       	cpc	r17, r25
 200:	59 f7       	brne	.-42     	; 0x1d8 <delay_ms+0x3c>
				}
		
			}
		
		}
}
 202:	28 96       	adiw	r28, 0x08	; 8
 204:	0f b6       	in	r0, 0x3f	; 63
 206:	f8 94       	cli
 208:	de bf       	out	0x3e, r29	; 62
 20a:	0f be       	out	0x3f, r0	; 63
 20c:	cd bf       	out	0x3d, r28	; 61
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	1f 91       	pop	r17
 214:	0f 91       	pop	r16
 216:	ff 90       	pop	r15
 218:	ef 90       	pop	r14
 21a:	08 95       	ret

Disassembly of section .text.main:

00000306 <main>:
			g_TIMER0_counter = 0;
		}	
}

int main(void)
{
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	28 97       	sbiw	r28, 0x08	; 8
 310:	0f b6       	in	r0, 0x3f	; 63
 312:	f8 94       	cli
 314:	de bf       	out	0x3e, r29	; 62
 316:	0f be       	out	0x3f, r0	; 63
 318:	cd bf       	out	0x3d, r28	; 61
	
	SET_BIT(DDRC, PC0); // Configure the led pin as output pin.
 31a:	84 b3       	in	r24, 0x14	; 20
 31c:	81 60       	ori	r24, 0x01	; 1
 31e:	84 bb       	out	0x14, r24	; 20
	CLEAR_BIT(PORTC, PC0); // LED is OFF at the beginning (Positive Logic).	
 320:	85 b3       	in	r24, 0x15	; 21
 322:	8e 7f       	andi	r24, 0xFE	; 254
 324:	85 bb       	out	0x15, r24	; 21
	St_Config_Timer_t timer0_config1 = {TIMER1, COMPARE_MODE_toggel , INTERNAL_CLK_PRESCALAR0_1 , DEFAULT_INITIAL_VALUE,200,CHANNEL_A};

	Timer_start(&timer0_config1);*/
    
	
	St_Config_Timer_t timer0_config1 = {TIMER1, COMPARE_MODE_toggel , INTERNAL_CLK_PRESCALAR0_1 , DEFAULT_INITIAL_VALUE,200,CHANNEL_A};
 326:	88 e0       	ldi	r24, 0x08	; 8
 328:	e0 e7       	ldi	r30, 0x70	; 112
 32a:	f0 e0       	ldi	r31, 0x00	; 0
 32c:	de 01       	movw	r26, r28
 32e:	11 96       	adiw	r26, 0x01	; 1
 330:	01 90       	ld	r0, Z+
 332:	0d 92       	st	X+, r0
 334:	8a 95       	dec	r24
 336:	e1 f7       	brne	.-8      	; 0x330 <main+0x2a>

	Timer_start(&timer0_config1);
 338:	ce 01       	movw	r24, r28
 33a:	01 96       	adiw	r24, 0x01	; 1
 33c:	0e 94 5a 00 	call	0xb4	; 0xb4 <_etext>
	

    while(1)
    {
		
		delay_ms(500);
 340:	84 ef       	ldi	r24, 0xF4	; 244
 342:	91 e0       	ldi	r25, 0x01	; 1
 344:	0e 94 ce 00 	call	0x19c	; 0x19c <delay_ms>
		TOGGLE_BIT(PORTC, PC0);
 348:	95 b3       	in	r25, 0x15	; 21
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	89 27       	eor	r24, r25
 34e:	85 bb       	out	0x15, r24	; 21
 350:	f7 cf       	rjmp	.-18     	; 0x340 <main+0x3a>

Disassembly of section .text.__vector_10:

0000021c <__vector_10>:
uint8_t Timer2_OV_flag()
{
	while(BIT_IS_CLEAR(TIFR,TOV2));
	SET_BIT(TIFR,TOV2);
	return 1;
}
 21c:	1f 92       	push	r1
 21e:	0f 92       	push	r0
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	0f 92       	push	r0
 224:	11 24       	eor	r1, r1
 226:	2f 93       	push	r18
 228:	3f 93       	push	r19
 22a:	4f 93       	push	r20
 22c:	5f 93       	push	r21
 22e:	6f 93       	push	r22
 230:	7f 93       	push	r23
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
 236:	af 93       	push	r26
 238:	bf 93       	push	r27
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
 23e:	e0 91 7c 00 	lds	r30, 0x007C	; 0x80007c <g_callBackPtrTimer0CTC>
 242:	f0 91 7d 00 	lds	r31, 0x007D	; 0x80007d <g_callBackPtrTimer0CTC+0x1>
 246:	09 95       	icall
 248:	ff 91       	pop	r31
 24a:	ef 91       	pop	r30
 24c:	bf 91       	pop	r27
 24e:	af 91       	pop	r26
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	7f 91       	pop	r23
 256:	6f 91       	pop	r22
 258:	5f 91       	pop	r21
 25a:	4f 91       	pop	r20
 25c:	3f 91       	pop	r19
 25e:	2f 91       	pop	r18
 260:	0f 90       	pop	r0
 262:	0f be       	out	0x3f, r0	; 63
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

Disassembly of section .text.__vector_4:

0000026a <__vector_4>:
 26a:	1f 92       	push	r1
 26c:	0f 92       	push	r0
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	0f 92       	push	r0
 272:	11 24       	eor	r1, r1
 274:	2f 93       	push	r18
 276:	3f 93       	push	r19
 278:	4f 93       	push	r20
 27a:	5f 93       	push	r21
 27c:	6f 93       	push	r22
 27e:	7f 93       	push	r23
 280:	8f 93       	push	r24
 282:	9f 93       	push	r25
 284:	af 93       	push	r26
 286:	bf 93       	push	r27
 288:	ef 93       	push	r30
 28a:	ff 93       	push	r31
 28c:	e0 91 78 00 	lds	r30, 0x0078	; 0x800078 <g_callBackPtrTimer2CTC>
 290:	f0 91 79 00 	lds	r31, 0x0079	; 0x800079 <g_callBackPtrTimer2CTC+0x1>
 294:	09 95       	icall
 296:	ff 91       	pop	r31
 298:	ef 91       	pop	r30
 29a:	bf 91       	pop	r27
 29c:	af 91       	pop	r26
 29e:	9f 91       	pop	r25
 2a0:	8f 91       	pop	r24
 2a2:	7f 91       	pop	r23
 2a4:	6f 91       	pop	r22
 2a6:	5f 91       	pop	r21
 2a8:	4f 91       	pop	r20
 2aa:	3f 91       	pop	r19
 2ac:	2f 91       	pop	r18
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

Disassembly of section .text.__vector_7:

000002b8 <__vector_7>:
 2b8:	1f 92       	push	r1
 2ba:	0f 92       	push	r0
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	2f 93       	push	r18
 2c4:	3f 93       	push	r19
 2c6:	4f 93       	push	r20
 2c8:	5f 93       	push	r21
 2ca:	6f 93       	push	r22
 2cc:	7f 93       	push	r23
 2ce:	8f 93       	push	r24
 2d0:	9f 93       	push	r25
 2d2:	af 93       	push	r26
 2d4:	bf 93       	push	r27
 2d6:	ef 93       	push	r30
 2d8:	ff 93       	push	r31
 2da:	e0 91 7a 00 	lds	r30, 0x007A	; 0x80007a <g_callBackPtrTimer1COMPA>
 2de:	f0 91 7b 00 	lds	r31, 0x007B	; 0x80007b <g_callBackPtrTimer1COMPA+0x1>
 2e2:	09 95       	icall
 2e4:	ff 91       	pop	r31
 2e6:	ef 91       	pop	r30
 2e8:	bf 91       	pop	r27
 2ea:	af 91       	pop	r26
 2ec:	9f 91       	pop	r25
 2ee:	8f 91       	pop	r24
 2f0:	7f 91       	pop	r23
 2f2:	6f 91       	pop	r22
 2f4:	5f 91       	pop	r21
 2f6:	4f 91       	pop	r20
 2f8:	3f 91       	pop	r19
 2fa:	2f 91       	pop	r18
 2fc:	0f 90       	pop	r0
 2fe:	0f be       	out	0x3f, r0	; 63
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

Disassembly of section .text.Timer_start:

000000b4 <Timer_start>:
  b4:	fc 01       	movw	r30, r24
  b6:	80 81       	ld	r24, Z
  b8:	81 30       	cpi	r24, 0x01	; 1
  ba:	c1 f1       	breq	.+112    	; 0x12c <Timer_start+0x78>
  bc:	18 f0       	brcs	.+6      	; 0xc4 <Timer_start+0x10>
  be:	82 30       	cpi	r24, 0x02	; 2
  c0:	e1 f0       	breq	.+56     	; 0xfa <Timer_start+0x46>
  c2:	08 95       	ret
  c4:	93 b7       	in	r25, 0x33	; 51
  c6:	81 81       	ldd	r24, Z+1	; 0x01
  c8:	89 2b       	or	r24, r25
  ca:	83 bf       	out	0x33, r24	; 51
  cc:	93 b7       	in	r25, 0x33	; 51
  ce:	82 81       	ldd	r24, Z+2	; 0x02
  d0:	87 70       	andi	r24, 0x07	; 7
  d2:	89 2b       	or	r24, r25
  d4:	83 bf       	out	0x33, r24	; 51
  d6:	83 81       	ldd	r24, Z+3	; 0x03
  d8:	82 bf       	out	0x32, r24	; 50
  da:	85 81       	ldd	r24, Z+5	; 0x05
  dc:	8c bf       	out	0x3c, r24	; 60
  de:	8f b7       	in	r24, 0x3f	; 63
  e0:	80 68       	ori	r24, 0x80	; 128
  e2:	8f bf       	out	0x3f, r24	; 63
  e4:	03 b6       	in	r0, 0x33	; 51
  e6:	03 fe       	sbrs	r0, 3
  e8:	04 c0       	rjmp	.+8      	; 0xf2 <Timer_start+0x3e>
  ea:	89 b7       	in	r24, 0x39	; 57
  ec:	82 60       	ori	r24, 0x02	; 2
  ee:	89 bf       	out	0x39, r24	; 57
  f0:	08 95       	ret
  f2:	89 b7       	in	r24, 0x39	; 57
  f4:	81 60       	ori	r24, 0x01	; 1
  f6:	89 bf       	out	0x39, r24	; 57
  f8:	08 95       	ret
  fa:	81 81       	ldd	r24, Z+1	; 0x01
  fc:	85 bd       	out	0x25, r24	; 37
  fe:	95 b5       	in	r25, 0x25	; 37
 100:	82 81       	ldd	r24, Z+2	; 0x02
 102:	87 70       	andi	r24, 0x07	; 7
 104:	89 2b       	or	r24, r25
 106:	85 bd       	out	0x25, r24	; 37
 108:	83 81       	ldd	r24, Z+3	; 0x03
 10a:	84 bd       	out	0x24, r24	; 36
 10c:	85 81       	ldd	r24, Z+5	; 0x05
 10e:	83 bd       	out	0x23, r24	; 35
 110:	8f b7       	in	r24, 0x3f	; 63
 112:	80 68       	ori	r24, 0x80	; 128
 114:	8f bf       	out	0x3f, r24	; 63
 116:	05 b4       	in	r0, 0x25	; 37
 118:	03 fe       	sbrs	r0, 3
 11a:	04 c0       	rjmp	.+8      	; 0x124 <Timer_start+0x70>
 11c:	89 b7       	in	r24, 0x39	; 57
 11e:	80 68       	ori	r24, 0x80	; 128
 120:	89 bf       	out	0x39, r24	; 57
 122:	08 95       	ret
 124:	89 b7       	in	r24, 0x39	; 57
 126:	80 64       	ori	r24, 0x40	; 64
 128:	89 bf       	out	0x39, r24	; 57
 12a:	08 95       	ret
 12c:	83 81       	ldd	r24, Z+3	; 0x03
 12e:	8c b9       	out	0x0c, r24	; 12
 130:	81 81       	ldd	r24, Z+1	; 0x01
 132:	80 38       	cpi	r24, 0x80	; 128
 134:	69 f4       	brne	.+26     	; 0x150 <Timer_start+0x9c>
 136:	8f b7       	in	r24, 0x3f	; 63
 138:	80 68       	ori	r24, 0x80	; 128
 13a:	8f bf       	out	0x3f, r24	; 63
 13c:	89 b7       	in	r24, 0x39	; 57
 13e:	84 60       	ori	r24, 0x04	; 4
 140:	89 bf       	out	0x39, r24	; 57
 142:	8c e0       	ldi	r24, 0x0C	; 12
 144:	8f bd       	out	0x2f, r24	; 47
 146:	9e b5       	in	r25, 0x2e	; 46
 148:	82 81       	ldd	r24, Z+2	; 0x02
 14a:	89 2b       	or	r24, r25
 14c:	8e bd       	out	0x2e, r24	; 46
 14e:	08 95       	ret
 150:	88 38       	cpi	r24, 0x88	; 136
 152:	19 f5       	brne	.+70     	; 0x19a <Timer_start+0xe6>
 154:	8c e0       	ldi	r24, 0x0C	; 12
 156:	8f bd       	out	0x2f, r24	; 47
 158:	8e b5       	in	r24, 0x2e	; 46
 15a:	88 60       	ori	r24, 0x08	; 8
 15c:	8e bd       	out	0x2e, r24	; 46
 15e:	87 81       	ldd	r24, Z+7	; 0x07
 160:	81 11       	cpse	r24, r1
 162:	0b c0       	rjmp	.+22     	; 0x17a <Timer_start+0xc6>
 164:	8f b7       	in	r24, 0x3f	; 63
 166:	80 68       	ori	r24, 0x80	; 128
 168:	8f bf       	out	0x3f, r24	; 63
 16a:	89 b7       	in	r24, 0x39	; 57
 16c:	80 61       	ori	r24, 0x10	; 16
 16e:	89 bf       	out	0x39, r24	; 57
 170:	85 81       	ldd	r24, Z+5	; 0x05
 172:	8a bd       	out	0x2a, r24	; 42
 174:	86 81       	ldd	r24, Z+6	; 0x06
 176:	8b bd       	out	0x2b, r24	; 43
 178:	0c c0       	rjmp	.+24     	; 0x192 <Timer_start+0xde>
 17a:	81 30       	cpi	r24, 0x01	; 1
 17c:	51 f4       	brne	.+20     	; 0x192 <Timer_start+0xde>
 17e:	8f b7       	in	r24, 0x3f	; 63
 180:	80 68       	ori	r24, 0x80	; 128
 182:	8f bf       	out	0x3f, r24	; 63
 184:	89 b7       	in	r24, 0x39	; 57
 186:	88 60       	ori	r24, 0x08	; 8
 188:	89 bf       	out	0x39, r24	; 57
 18a:	85 81       	ldd	r24, Z+5	; 0x05
 18c:	8a bd       	out	0x2a, r24	; 42
 18e:	86 81       	ldd	r24, Z+6	; 0x06
 190:	8b bd       	out	0x2b, r24	; 43
 192:	9e b5       	in	r25, 0x2e	; 46
 194:	82 81       	ldd	r24, Z+2	; 0x02
 196:	89 2b       	or	r24, r25
 198:	8e bd       	out	0x2e, r24	; 46
 19a:	08 95       	ret

Disassembly of section .text.Timer1A_CTC_flag:

00000352 <Timer1A_CTC_flag>:


uint8_t Timer1A_CTC_flag()
{
	while(BIT_IS_CLEAR(TIFR,OCF1A));
 352:	08 b6       	in	r0, 0x38	; 56
 354:	04 fe       	sbrs	r0, 4
 356:	fd cf       	rjmp	.-6      	; 0x352 <Timer1A_CTC_flag>
	SET_BIT(TIFR,OCF1A);
 358:	88 b7       	in	r24, 0x38	; 56
 35a:	80 61       	ori	r24, 0x10	; 16
 35c:	88 bf       	out	0x38, r24	; 56
	return 1;
}
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	08 95       	ret
